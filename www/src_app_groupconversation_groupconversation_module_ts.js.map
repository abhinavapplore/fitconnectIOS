{"version":3,"file":"src_app_groupconversation_groupconversation_module_ts.js","mappings":"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","sources":["./src/app/groupconversation/groupconversation-routing.module.ts","./src/app/groupconversation/groupconversation.module.ts","./src/app/groupconversation/groupconversation.page.ts","./src/app/groupconversation/groupconversation.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupconversationPage } from './groupconversation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupconversationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupconversationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupconversationPageRoutingModule } from './groupconversation-routing.module';\n\nimport { GroupconversationPage } from './groupconversation.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupconversationPageRoutingModule\n  ],\n  declarations: [GroupconversationPage]\n})\nexport class GroupconversationPageModule {}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Storage } from '@ionic/storage';\nimport * as firebase from 'firebase/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-groupconversation',\n  templateUrl: './groupconversation.page.html',\n  styleUrls: ['./groupconversation.page.scss'],\n})\nexport class GroupconversationPage implements OnInit {\n  // eventId;\n  userType;\n  text: string;\n  chatRef: any;\n  uid: string;\n  senderId: any;\n  // RECIEVER ID IS THE EVENT ID\n  recieverId: any;\n  displayName: any;\n  userName: any;\n  recieverName: any;\n  showList: boolean = false;\n  isSearch: boolean = false;\n  searchTerm: any;\n  search: any;\n  chatUserName: boolean = false;\n  title: any;\n  recieverImg: any;\n  userImage;\n  footerAction: boolean = true;\n  msgValue: boolean;\n  notificationPresent: boolean = false;\n  notificationArray;\n\n  @ViewChild('content', { static: false }) content;\n  subMenuList: boolean;\n  userEventCardBoolean: boolean;\n  coachEventCardBoolean: boolean;\n  // api: any;\n  constructor(\n    public af: AngularFireAuth,\n    public fs: AngularFirestore,\n    private storage: Storage,\n    public router: Router,\n    private route: ActivatedRoute,\n    public http: Http,\n    public httpClient: HttpClient,\n    public api: ApiService\n  ) {\n    this.storage.get('user_id').then((user_id) => {\n      this.uid = user_id;\n      this.storage.get('user_type').then((user_type) => {\n        this.userType = user_type;\n      });\n    });\n    //Enter user id here\n    this.storage.get('user_id').then((user_id) => {\n      this.storage.get('user_img').then((user_img) => {\n        console.log('user_id', user_id);\n        this.userImage = user_img;\n\n        this.route.queryParams.subscribe((params) => {\n          console.log(params);\n\n          if (params && params.special && params.pageRoute) {\n            // alert('pageroute');\n            this.chatUserName = false;\n\n            this.title = 'Get Help';\n          } else if (params && params.special) {\n            var todayDate = moment().format('DD-MM-YYYY');\n            var details = JSON.parse(params.special);\n\n            // alert('else block');\n            console.log('PARAMS', details);\n\n            this.chatUserName = true;\n            // this.eventId = details.eventId;\n            this.recieverId = details.recieverId;\n            this.senderId = details.senderId;\n            this.recieverName = details.recieverName;\n            this.recieverImg = details.recieverImg;\n\n            // this.fs\n            //   .collection('friends')\n            //   .doc(this.senderId)\n            //   .collection('chats')\n            //   .doc(this.recieverId)\n            //   .update({\n            //     msgRead: true,\n            //   });\n\n            this.chatRef = this.fs\n              // .collection('friends')\n              .collection('events')\n              // .doc(this.senderId)\n              .doc(this.recieverId + '')\n              // .collection('chats')\n              // .doc(this.recieverId)\n              .collection('messagetrail', (ref) => ref.orderBy('Timestamp'))\n              .valueChanges();\n            console.log('CHATS', this.chatRef);\n\n            this.scrollToBottomOnInit();\n\n            this.uid = user_id;\n            console.log(\n              'Reciever/sender' +\n                this.recieverId +\n                ' ' +\n                this.senderId +\n                '' +\n                this.uid\n            );\n            // this.chatRef = this.fs.collection('chats', ref => ref.orderBy('Timestamp')).valueChanges();\n            // tslint:disable-next-line: max-line-length\n\n            //  this.fs.collection(\"friends\").doc(this.senderId).collection('chats').doc(this.recieverId)\n            //  .get().subscribe((doc)=>{\n            //    if (doc.exists) {\n            //      console.log(\"Document data:\", doc.data());\n            //      this.userName=doc.data().recieverName;\n            //    } else {\n            //      // doc.data() will be undefined in this case\n            //      console.log(\"No such document!\");\n            //    }\n            //  })\n          }\n        });\n      });\n    });\n  }\n  events() {\n    if (this.userType === '1') {\n      this.api.Navigate('creer-evenement');\n    } else {\n      this.api.Navigate('evenementcoachvue');\n    }\n  }\n  ngOnInit() {\n    this.scrollToBottomOnInit();\n  }\n\n  ionViewDidEnter() {\n    this.scrollToBottomOnInit();\n  }\n\n  viewProfile() {\n    console.log('my event');\n\n    console.log('others event');\n    var vc = { user_id: this.recieverId };\n    let navigationExtras = {\n      queryParams: {\n        special: JSON.stringify(vc),\n      },\n    };\n    this.router.navigate(['coachviewprofile'], navigationExtras);\n  }\n\n  scrollToBottomOnInit() {\n    setTimeout(() => {\n      if (this.content.scrollToBottom) {\n        this.content.scrollToBottom(400);\n      }\n    }, 500);\n  }\n\n  send(text) {\n    if (this.text != '') {\n      var formattedTime = moment().format('HH:mm');\n      var formattedDate = moment().format('DD-MM-YYYY');\n      // this.fs.collection('chats').add({\n\n      //   Name: \"test user\",\n      //   Message: text,\n      //   UserID: this.uid,\n      //   Timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      // });\n      // this.text = '';\n      console.log('lola');\n      console.log(this);\n      // this.fs\n      //   .collection('friends')\n      //   .doc(this.senderId)\n      //   .collection('chats')\n      //   .doc(this.recieverId)\n      //   .collection('messagetrail')\n      //   .add({\n\n      //     Message: text,\n      //     UserID: this.uid,\n      //     Timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      //     // recieverId: this.recieverId,\n      //     senderId: this.senderId,\n      //     msgTime: formattedTime,\n      //     msgDate: formattedDate,\n      //     msgSent: true,\n      //     msgRead: false,\n      //   });\n      // this.fs\n      //   .collection('friends')\n      //   .doc(this.senderId)\n      //   .collection('chats')\n      //   .doc(this.recieverId)\n      //   .update({\n      //     lastMsg: this.text,\n      //     msgTime: formattedTime,\n      //     msgDate: formattedDate,\n      //     Timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      //     msgRead: true,\n      //   });\n\n      // this.fs\n      //   .collection('events')\n      //   .doc(this.recieverId + '')\n\n      //   .collection('messagetrail')\n      //   .doc(this.senderId)\n      //   .update({\n      //     lastMsg: this.text,\n      //     msgTime: formattedTime,\n      //     msgDate: formattedDate,\n      //     Timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      //     msgRead: true,\n      //   });\n      this.fs\n        // .collection('friends')\n        .collection('events')\n        // .doc(this.recieverId)\n        .doc(this.recieverId + '')\n        // .collection('chats')\n        // .doc(this.senderId)\n        .collection('messagetrail')\n        .add({\n          Name: this.recieverName,\n          Message: text,\n          UserID: this.uid,\n          // UserID: 123,\n          Timestamp: firebase.Timestamp.fromDate(new Date()),\n          recieverId: this.recieverId,\n          // recieverId: 456,\n          senderId: this.senderId,\n          imgUrl: this.userImage,\n          // senderId: 789,\n          msgTime: formattedTime,\n          msgDate: formattedDate,\n          msgSent: true,\n          msgRead: false,\n        });\n\n      this.fs.collection('events').doc(this.recieverId).set({ lastMsg: text });\n      // this.fs\n      //   .collection('friends')\n      //   .doc(this.recieverId)\n      //   .collection('chats')\n      //   .doc(this.senderId)\n      //   .update({\n      //     lastMsg: this.text,\n      //     msgTime: formattedTime,\n      //     msgDate: formattedDate,\n      //     Timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      //     msgRead: false,\n      //   });\n\n      this.scrollToBottomOnInit();\n\n      const formData = new FormData();\n\n      formData.append('noti_from_user_id', this.senderId);\n      formData.append('noti_event_id', this.recieverId);\n      formData.append('noti_message', this.text);\n\n      this.http\n        .post(\n          'http://fitconnected.prometteur.in/index.php/Api/madd/send_group_notification',\n          formData\n        )\n        .subscribe((res) => {\n          if (res.json().status == 1) {\n          } else {\n            console.log(res);\n          }\n        });\n      this.text = '';\n    }\n  }\n  back() {\n    var vc = {\n      pageRoute: 'conversation',\n    };\n\n    let navigationExtras = {\n      queryParams: {\n        special: JSON.stringify(vc),\n      },\n    };\n\n    this.router.navigate(['chatpage'], navigationExtras);\n  }\n\n  searchPressed() {\n    this.isSearch = true;\n  }\n\n  eventdetails() {\n    this.showList = false;\n    this.subMenuList = false;\n    this.userEventCardBoolean = false;\n    this.coachEventCardBoolean = false;\n    this.api.Navigate('mes-evenements');\n  }\n  rankingDetails() {\n    this.api.Navigate('ranking');\n  }\n  messages() {\n    this.showList = false;\n    this.subMenuList = false;\n    this.userEventCardBoolean = false;\n    this.coachEventCardBoolean = false;\n\n    var vc = {\n      pageRoute: 'conversation',\n    };\n\n    let navigationExtras = {\n      queryParams: {\n        special: JSON.stringify(vc),\n      },\n    };\n\n    this.router.navigate(['chatpage'], navigationExtras);\n  }\n  notifications() {\n    this.showList = false;\n    this.subMenuList = false;\n    this.userEventCardBoolean = false;\n    this.coachEventCardBoolean = false;\n    this.api.Navigate('notifications');\n  }\n\n  getUser(ev: any) {\n    var arr = [];\n    var arr1 = [];\n    this.fs\n      .collection('friends')\n      .doc(this.senderId)\n      .collection('chats')\n      .doc(this.recieverId)\n      .collection('messagetrail')\n      .get()\n      .subscribe((querySnapshot) => {\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n\n          arr1.push(doc.data());\n          console.log(doc.id, ' => ', doc.data());\n        });\n\n        for (let i = 0; i < arr1.length; i++) {\n          var input = arr1[i];\n          arr.push(input);\n\n          let val = ev.target.value;\n\n          if (val && val.trim() != '') {\n            this.search = arr.filter(function (item) {\n              return item.Message.toLowerCase().indexOf(val.toLowerCase()) > -1;\n            });\n\n            this.showList = true;\n          } else {\n            this.showList = false;\n          }\n        }\n      });\n  }\n  selectChat(item) {\n    this.showList = false;\n    this.searchTerm = '';\n    this.isSearch = false;\n  }\n\n  closeSearch() {\n    this.showList = false;\n    this.isSearch = false;\n    this.searchTerm = '';\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col\\n          [size]=\\\"2\\\"\\n          style=\\\"display: flex; flex-direction: column; justify-content: center\\\"\\n          (click)=\\\"back()\\\"\\n        >\\n          <img style=\\\"width: 50%\\\" src=\\\"../../assets/images/backblack.png\\\" />\\n        </ion-col>\\n        <!-- <ion-col [size]=\\\"2\\\" (click)=\\\"viewProfile()\\\"> -->\\n        <!-- <ion-col [size]=\\\"2\\\">\\n          <ion-avatar style=\\\"display: flex; align-items: center\\\"> </ion-avatar>\\n        </ion-col> -->\\n        <ion-col\\n          *ngIf=\\\"chatUserName\\\"\\n          [size]=\\\"8\\\"\\n          style=\\\"\\n            font-family: 'montserrat';\\n            font-size: 1rem;\\n            font-weight: bolder;\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-start;\\n            align-items: center;\\n          \\\"\\n        >\\n          <ion-text style=\\\"color: #ceb900; margin-top: 2px\\\"\\n            >{{recieverName}}</ion-text\\n          >\\n        </ion-col>\\n        <ion-col\\n          *ngIf=\\\"!chatUserName\\\"\\n          [size]=\\\"8\\\"\\n          style=\\\"\\n            text-align: center;\\n            font-family: Open Sans-semibold;\\n            font-size: 24px;\\n          \\\"\\n        >\\n          <ion-text>{{title}}</ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- <div id=\\\"searchOverlay\\\">\\n\\n\\n  <div *ngIf=\\\"isSearch\\\">\\n    <ion-item style=\\\"background-color: #FFFFFF;\\\">\\n      <ion-input style=\\\"background-color: whitesmoke;border-radius: 12px;font-family: Proxima Nova-bold;\\\" type=\\\"text\\\" searchIcon=\\\"disable\\\" placeholder=\\\"Type Here\\\" (ionInput)=\\\"getUser($event)\\\" value={{searchTerm}}></ion-input>\\n    <ion-icon name=\\\"close-circle-outline\\\" (click)=\\\"closeSearch()\\\"></ion-icon>\\n    </ion-item>\\n    \\n    \\n   </div>\\n\\n   <div *ngIf=\\\"showList\\\">\\n    <ion-list style=\\\"height: 55px;width: 30%;background-color: #FFFFFF;\\\" *ngFor=\\\"let item of search\\\" (click)=\\\"selectChat(item)\\\">\\n      <ion-grid>\\n        <ion-row style=\\\"text-align: center;\\\">\\n          \\n          \\n              \\n                <ion-text style=\\\"font-size: 13px;font-family:Open Sans-regular;color: #454F63;\\\">{{item.Message}}</ion-text><br>\\n                \\n             \\n          \\n        </ion-row>\\n          \\n        \\n      </ion-grid>\\n    </ion-list>\\n  </div>\\n</div> -->\\n\\n<ion-content #content>\\n  <div class=\\\"chat\\\" *ngFor=\\\"let chat of chatRef | async\\\">\\n    <div *ngIf=\\\"uid== chat.UserID\\\" class=\\\"me\\\" style=\\\"display: flex\\\">\\n      <div class=\\\"me\\\" style=\\\"color: black; background: whitesmoke\\\">\\n        <span>\\n          {{chat.Message}} <br />\\n          <span\\n            style=\\\"\\n              font-size: 10px;\\n              display: flex;\\n              flex-direction: row;\\n              justify-content: flex-end;\\n            \\\"\\n          >\\n            {{chat.msgTime}}\\n          </span>\\n        </span>\\n      </div>\\n      <ion-avatar\\n        style=\\\"display: flex; justify-content: center; align-items: flex-end\\\"\\n      >\\n        <ion-img [src]=\\\"userImage\\\" style=\\\"height: 35px; width: 35px\\\"> </ion-img>\\n      </ion-avatar>\\n    </div>\\n    <div *ngIf=\\\"uid!=chat.UserID\\\" class=\\\"you\\\" style=\\\"display: flex\\\">\\n      <ion-avatar\\n        style=\\\"\\n          display: flex;\\n          flex-direction: row;\\n          height: 35px;\\n          width: 36px;\\n          padding-top: 16%;\\n          margin-right: 10%;\\n        \\\"\\n      >\\n        <ion-img [src]=\\\"chat.imgUrl\\\" style=\\\"height: 35px; width: 35px\\\">\\n        </ion-img>\\n      </ion-avatar>\\n      <div\\n        class=\\\"you\\\"\\n        style=\\\"color: white; background: #3e9dff; margin: 15px 0px 15px 0px\\\"\\n      >\\n        <span>\\n          {{chat.Message}} <br />\\n          <span\\n            style=\\\"\\n              font-size: 10px;\\n              display: flex;\\n              flex-direction: row;\\n              justify-content: flex-end;\\n            \\\"\\n          >\\n            {{chat.msgTime}}\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\\n<!-- <ion-content class=\\\"massagechat-content\\\" [routerLink]=\\\"['/messagerie']\\\"\\n             routerLinkActive=\\\"router-link-active\\\">\\n    <section class=\\\"chat-internal-block\\\">\\n        <div class=\\\"chat-massage-box\\\" *ngFor=\\\"let chat of chatRef | async\\\">\\n            <div class=\\\"chat-row sender\\\" *ngIf=\\\"uid== chat.UserID\\\">\\n                \\n                <ion-img [src]=\\\"userImage\\\" style=\\\"height: 35px;width: 35px;\\\">\\n                </ion-img>\\n                <div class=\\\"chat-msgbox\\\">\\n                    <ion-text class=\\\"chatmsg\\\">\\n                      {{chat.Message}}\\n                    </ion-text>\\n                    <small class=\\\"chat-time\\\">15:07</small>\\n                </div>\\n            </div>\\n            <div class=\\\"chat-row reciver\\\" *ngIf=\\\"uid!=chat.UserID\\\">\\n              \\n                <ion-img [src]=\\\"recieverImg\\\" style=\\\"height: 35px;width: 35px;\\\">\\n                </ion-img>\\n                <div class=\\\"chat-msgbox\\\">\\n                    <ion-text class=\\\"chatmsg\\\">\\n                      {{chat.Message}}\\n                    </ion-text>\\n                    <small class=\\\"chat-time\\\">15:10</small>\\n                </div>\\n            </div>\\n            \\n            \\n            \\n        </div>\\n        \\n    </section>\\n</ion-content> -->\\n\\n<ion-row>\\n  <ion-col>\\n    <ion-item\\n      class=\\\"chatbox\\\"\\n      style=\\\"\\n        border-radius: 25px;\\n        box-shadow: #000000 !important;\\n        width: 80%;\\n        margin: auto;\\n      \\\"\\n    >\\n      <ion-input\\n        style=\\\"font-weight: bolder\\\"\\n        placeholder=\\\"Type...\\\"\\n        [(ngModel)]=\\\"text\\\"\\n      ></ion-input>\\n      <ion-button\\n        style=\\\"border-radius: 50px\\\"\\n        (click)=\\\"send(text)\\\"\\n        fill=\\\"clear\\\"\\n        icon-only\\n        slot=\\\"end\\\"\\n      >\\n        <ion-icon name=\\\"send\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-col>\\n</ion-row>\\n\\n<ion-footer class=\\\"footer-fixed-tab\\\" *ngIf=\\\"footerAction\\\">\\n  <ion-toolbar>\\n    <ion-buttons>\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"events()\\\">\\n        <img\\n          src=\\\"assets/images/unselectedlocation.png\\\"\\n          class=\\\"footer-img-location\\\"\\n        />\\n      </div>\\n\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"rankingDetails()\\\">\\n        <img src=\\\"assets/rankiconunselected.svg\\\" class=\\\"footer-img-location\\\" />\\n      </div>\\n\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"eventdetails()\\\">\\n        <img\\n          src=\\\"assets/images/unselectedcalendar.png\\\"\\n          class=\\\"footer-img-date\\\"\\n        />\\n      </div>\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"messages()\\\">\\n        <img src=\\\"assets/images/selectedmsg.png\\\" class=\\\"footer-img-chat\\\" />\\n        <div class=\\\"round\\\" *ngIf=\\\"this.api.showMessageDot\\\"></div>\\n      </div>\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"notifications()\\\">\\n        <img\\n          src=\\\"assets/images/unselectednotification.png\\\"\\n          class=\\\"footer-img-noti\\\"\\n        />\\n        <div class=\\\"round\\\" *ngIf=\\\"this.api.showNotificationDot\\\">\\n          {{notificationArray}}\\n        </div>\\n      </div>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";"],"names":[],"sourceRoot":"webpack:///"}