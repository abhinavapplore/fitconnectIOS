{"version":3,"file":"src_app_question_question_module_ts.js","mappings":"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","sources":["./src/app/question/question-routing.module.ts","./src/app/question/question.module.ts","./src/app/question/question.page.ts","./src/app/question/question.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuestionPage } from './question.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuestionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuestionPageRoutingModule } from './question-routing.module';\n\nimport { QuestionPage } from './question.page';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,TranslateModule,\n    IonicModule,\n    QuestionPageRoutingModule\n  ],\n  declarations: [QuestionPage]\n})\nexport class QuestionPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.page.html',\n  styleUrls: ['./question.page.scss'],\n})\nexport class QuestionPage implements OnInit {\n  type;\n  able;\n  selectone;\n  uid;\n  AlreadyUser: boolean = false;\n  English: boolean;\n\n  constructor(\n    public api: ApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    public storage: Storage,\n    public http: Http,\n    public httpClient: HttpClient\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      if (params && params.special) {\n        var details = JSON.parse(params.special);\n        if (details.pageRoute === 'myProfile') {\n          this.AlreadyUser = true;\n          this.uid = details.userId;\n          this.selectone = details.selected;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.storage.get('user_lang').then((lang) => {\n      if (lang == 'English') {\n        this.English = true;\n        this.type = [\n          {\n            name: 'Occasional',\n            select: false,\n          },\n          {\n            name: 'Regular',\n            select: false,\n          },\n          // {\n          //   \"name\": \"Trailer\",\n          //   \"select\": false\n          // }\n        ];\n      } else {\n        this.English = false;\n        this.type = [\n          {\n            name: 'Occasionnel',\n            select: false,\n          },\n          {\n            name: 'Régulier',\n            select: false,\n          },\n          // {\n          //   \"name\": \"Trailer\",\n          //   \"select\": false\n          // }\n        ];\n      }\n\n      for (let i = 0; i < this.type.length; i++) {\n        if (this.selectone == this.type[i].name) {\n          this.able = true;\n          this.selectone = this.type[i].name;\n          this.type[i].select = true;\n        } else {\n          this.type[i].select = false;\n        }\n      }\n    });\n  }\n\n  selected(x) {\n    for (let i = 0; i < this.type.length; i++) {\n      if (i == x) {\n        this.able = true;\n        this.selectone = this.type[i].name;\n        this.type[i].select = true;\n      } else {\n        this.type[i].select = false;\n      }\n    }\n  }\n\n  submit() {\n    if (this.able == true) {\n      if (this.AlreadyUser === true) {\n        console.log(this.selectone);\n        const formData = new FormData();\n        formData.append('user_id', this.uid);\n        formData.append('user_question1_response', this.selectone);\n        this.http\n          .post(\n            'http://fitconnected.prometteur.in/index.php/Api/madd/user',\n            formData\n          )\n          .subscribe((res) => {\n            if (res.json().status == 1) {\n              console.log(res);\n              var vc = {\n                pageRoute: 'question',\n                userId: this.uid,\n              };\n\n              let navigationExtras = {\n                queryParams: {\n                  special: JSON.stringify(vc),\n                },\n              };\n\n              this.router.navigate(['mon-profil'], navigationExtras);\n            }\n          });\n      } else {\n        var questions = {\n          user_question1_response: this.selectone,\n        };\n        this.api.setstorage('questions', questions);\n        // this.api.Navigate(\"question2\")\n        this.api.Navigate('inscription-professionnel3');\n      }\n    } else {\n      if (this.English) {\n        this.api.toast('Please select the type of athlete.');\n      } else {\n        this.api.toast('Veuillez sélectionner le type de sportif.');\n      }\n    }\n  }\n}\n","export default \"<ion-header no-border>\\n    <ion-toolbar class=\\\"terms-headersection\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button text=\\\"\\\" defaultHref=\\\"connexion\\\"></ion-back-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen >\\n    <section >\\n  \\n        <div class=\\\"center-content\\\">\\n            <ion-row>\\n                <ion-col style=\\\"font-family: montserrat-medium; font-weight: bold; color: #D3C117;\\\" class=\\\"question-count\\\" [translate]=\\\"'QUESTION.Text1'\\\"></ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col col-12 class=\\\"question-box-main\\\" [translate]=\\\"'QUESTION.Text2'\\\"></ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"options-box\\\" >\\n           \\n                    <h3 style=\\\"font-family: montserrat;font-weight: bold;\\\" *ngFor=\\\"let get of type;let x = index;\\\" [ngClass]=\\\"{selectedans: get.select == true}\\\" (click)=\\\"selected(x)\\\">{{get.name}}</h3>\\n               \\n            </ion-row>\\n            <ion-row>\\n                <button ion-button class=\\\"login-button global-btn\\\" style=\\\"background-color: #D3C117; color: white;\\\" (click)=\\\"submit()\\\" [translate]=\\\"'QUESTION.Text3'\\\">SUIVANT\\n                </button>\\n            </ion-row>\\n        </div>\\n    </section>\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}