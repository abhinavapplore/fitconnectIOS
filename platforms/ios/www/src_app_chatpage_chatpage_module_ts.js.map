{"version":3,"file":"src_app_chatpage_chatpage_module_ts.js","mappings":"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","sources":["./src/app/chatpage/chatpage-routing.module.ts","./src/app/chatpage/chatpage.module.ts","./src/app/chatpage/chatpage.page.ts","./src/app/chatpage/chatpage.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatpagePage } from './chatpage.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatpagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatpagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatpagePageRoutingModule } from './chatpage-routing.module';\n\nimport { ChatpagePage } from './chatpage.page';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatpagePageRoutingModule,TranslateModule\n  ],\n  declarations: [ChatpagePage]\n})\nexport class ChatpagePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Storage } from '@ionic/storage';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport * as moment from 'moment';\nimport { Keyboard } from '@awesome-cordova-plugins/keyboard/ngx';\nimport { TranslateConfigService } from '../translate-config.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-chatpage',\n  templateUrl: './chatpage.page.html',\n  styleUrls: ['./chatpage.page.scss'],\n})\nexport class ChatpagePage implements OnInit {\n  eventGroups = [];\n  recieverId: any;\n  senderId: any;\n  uid: any;\n  chats: any;\n  allUsers: any;\n  openchats = [];\n  showList: boolean = false;\n  isSearch: boolean = false;\n  searchTerm: any;\n  search: any;\n  userType: any;\n  footerAction: boolean = true;\n  emptydata: boolean = false;\n  emptyCoach: boolean;\n  topSearchPlaceHolder;\n  notificationPresent: boolean = false;\n  notificationArray;\n  msgValue: boolean;\n\n  constructor(\n    private router: Router,\n    public af: AngularFireAuth,\n    public http: HttpClient,\n    public fs: AngularFirestore,\n    private storage: Storage,\n    private route: ActivatedRoute,\n    public api: ApiService,\n    private keyboard: Keyboard,\n    public translateSevice: TranslateConfigService\n  ) {\n    this.storage.get('user_id').then((user_id) => {\n      this.uid = user_id;\n      this.storage.get('user_type').then((user_type) => {\n        this.userType = user_type;\n      });\n    });\n    this.keyboard.onKeyboardWillShow().subscribe((data) => {\n      this.footerAction = false;\n    });\n    this.keyboard.onKeyboardWillHide().subscribe((data) => {\n      this.footerAction = true;\n    });\n  }\n\n  ionViewDidEnter() {\n    this.storage.get('notificationArray').then((notificationArray) => {\n      this.storage.get('msgUnread').then((value) => {\n        this.msgValue = value;\n        if (\n          notificationArray == null ||\n          notificationArray == undefined ||\n          notificationArray.length == 0\n        ) {\n          this.notificationPresent = false;\n        } else {\n          this.notificationArray = notificationArray.length;\n          this.notificationPresent = true;\n        }\n      });\n    });\n    this.storage.get('user_id').then((user_id) => {\n      this.storage.get('user_type').then((user_type) => {\n        this.uid = user_id;\n        this.getEventGroups();\n        if (user_type === '2') {\n          this.storage.get('verifiedCoach').then((isSubscribed) => {\n            if (isSubscribed) {\n              this.getChats();\n            } else {\n              this.emptyCoach = true;\n            }\n          });\n        } else {\n          this.getChats();\n        }\n      });\n    });\n  }\n\n  async getEventGroups() {\n    // let res = await this.api.postapi('fields/event_groups', {\n    //   user_id: this.uid,\n    // });\n    // console.log('EVENTS GROUPS', res);\n\n    let formData = new FormData();\n    formData.append('user_id', this.uid + '');\n\n    this.http\n      .post(\n        this.api.rootUrl + 'fields/event_groups',\n        formData\n        // {\n        // user_id: this.uid + '',\n        // }\n      )\n      .subscribe(\n        (data: any) => {\n          console.log('EVENT GROUPS', data);\n          this.eventGroups = data.result;\n\n          // .collection('chats', (ref) => ref.orderBy('Timestamp', 'desc'))\n          // .snapshotChanges();\n\n          // This works:\n\n          this.eventGroups.forEach((element) => {\n            let fsGroups = this.fs\n              .collection('events')\n              .doc(element.event_id + '')\n              .valueChanges()\n              .subscribe((data: any) => {\n                element.lastMsg = data.lastMsg;\n                // console.log(data);\n              });\n          });\n        },\n        (err) => {\n          console.log(alert('Error getting groups'));\n        }\n      );\n  }\n\n  ngOnInit() {\n    this.storage.get('user_lang').then((lang) => {\n      if (lang == 'English') {\n        this.topSearchPlaceHolder = 'Search...';\n      } else {\n        this.topSearchPlaceHolder = 'Chercher...';\n      }\n    });\n  }\n\n  gotosubscription() {\n    this.api.Navigate('abonnement');\n  }\n\n  getChats() {\n    this.openchats = [];\n    this.api.timerloading();\n    this.allUsers = this.fs\n      .collection('friends')\n      .doc(this.uid)\n      .collection('chats', (ref) => ref.orderBy('Timestamp', 'desc'))\n      .snapshotChanges();\n\n    // This works:\n    console.log(this.allUsers);\n    var todayDate = moment().format('DD-MM-YYYY');\n    if (this.allUsers.length != 0) {\n      this.allUsers.forEach((user) => {\n        if (user.length == 0) {\n          this.emptydata = true;\n          this.api.dismissLoading();\n        } else {\n          this.emptydata = false;\n          this.openchats = [];\n          user.forEach((userData) => {\n            let data = userData.payload.doc.data();\n            let id = userData.payload.doc.id;\n            let time = moment(userData.payload.doc.Timestamp).format(\"h:mm A'\");\n            // console.log(typeof userData.payload.doc.Timestamp);\n            data.formatTime = time;\n            this.openchats.push(data);\n            console.log('this is openchat array');\n            console.log(this.openchats);\n            console.log('ID: ', id, ' Data: ', data);\n            if (this.openchats.length != 0) {\n              this.emptydata = false;\n\n              for (var i = 0; i < this.openchats.length; i++) {\n                // var msgDate=moment(this.openchats[i].msgDate);\n                if (this.openchats[i].msgDate != todayDate) {\n                  this.openchats[i].showTime = false;\n                } else {\n                  this.openchats[i].showTime = true;\n                  // this.openchats[element].msgTime=this.openchats[element].msgDate;\n                }\n                if (this.openchats[i].msgRead == false) {\n                  this.storage.set('msgUnread', true);\n                  break;\n                } else {\n                  console.log('msgRead');\n                  console.log(this.openchats[i]);\n                  this.storage.set('msgUnread', false);\n                }\n              }\n            } else {\n              this.emptydata = true;\n            }\n          });\n          this.api.dismissLoading();\n        }\n      });\n    } else {\n      this.api.dismissLoading();\n\n      this.emptydata = true;\n    }\n  }\n  gotochat(item) {\n    let recId = item.recieverId;\n\n    let vc = {\n      recieverId: recId,\n      senderId: this.uid,\n      recieverName: item.recieverName,\n      recieverImg: item.recieverImage,\n    };\n    let navigationExtras = {\n      queryParams: {\n        special: JSON.stringify(vc),\n      },\n    };\n    this.router.navigate(['conversation'], navigationExtras);\n  }\n  gotoGroupChat(group) {\n    // let recId = item.recieverId;\n\n    let eventName = group.spcat_name || 'Event';\n    eventName += ' : ' + group.event_date;\n    let vc = {\n      // eventId: group.event_id + '',\n      recieverId: group.event_id + '',\n      senderId: this.uid,\n      recieverName: eventName,\n      // recieverImg: 'item.recieverImage',\n    };\n    let navigationExtras = {\n      queryParams: {\n        special: JSON.stringify(vc),\n      },\n    };\n    this.router.navigate(['groupconversation'], navigationExtras);\n  }\n  //  this.router.navigateByUrl(\"conversation\");\n\n  back() {\n    this.router.navigateByUrl('profile');\n  }\n\n  rankingDetails() {\n    this.api.Navigate('ranking');\n  }\n\n  ionViewWillLeave() {\n    this.searchTerm = '';\n    this.showList = false;\n  }\n\n  searchPressed() {\n    this.isSearch = true;\n  }\n\n  getUser(ev: any) {\n    var arr = [];\n\n    for (let i = 0; i < this.openchats.length; i++) {\n      var input = this.openchats[i];\n      arr.push(input);\n\n      let val = ev.target.value;\n\n      if (val && val.trim() != '') {\n        this.search = arr.filter(function (item) {\n          return (\n            item.recieverName.toLowerCase().indexOf(val.toLowerCase()) > -1\n          );\n        });\n\n        // Show the results\n        if (this.search.length !== 0) {\n          this.showList = true;\n        } else {\n          this.showList = false;\n        }\n      } else {\n        this.showList = false;\n      }\n    }\n  }\n  selectChat(item) {\n    this.showList = false;\n    this.searchTerm = '';\n    this.isSearch = false;\n    console.log(item.evn_id);\n    console.log(item.evn_name);\n    console.log(item);\n    this.gotochat(item);\n  }\n\n  closeSearch() {\n    this.showList = false;\n    this.isSearch = false;\n    this.searchTerm = '';\n  }\n\n  events() {\n    if (this.userType === '1') {\n      this.api.Navigate('creer-evenement');\n    } else {\n      this.api.Navigate('evenementcoachvue');\n    }\n  }\n  manage() {\n    if (this.userType === '1') {\n      this.api.Navigate('mes-evenements');\n    } else {\n      this.api.Navigate('evenements-coach');\n    }\n  }\n  notifications() {\n    this.api.Navigate('notifications');\n  }\n}\n","export default \"<ion-header no-border class=\\\"header-fixed-top\\\">\\n  <ion-toolbar class=\\\"top-global-toolbar\\\">\\n    <!-- <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"response3\\\"></ion-back-button>\\n    </ion-buttons> -->\\n    <ion-title\\n      style=\\\"font-family: montserrat-medium\\\"\\n      class=\\\"top-fixed-heading uppercaes\\\"\\n      [translate]=\\\"'CHAT.Text1'\\\"\\n    >\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-row style=\\\"display: flex; flex-direction: row; justify-content: center\\\">\\n    <ion-searchbar\\n      style=\\\"margin-top: 4%; box-shadow: #000000 !important; width: 90%\\\"\\n      placeholder=\\\"{{topSearchPlaceHolder}}\\\"\\n      [(ngModel)]=\\\"searchTerm\\\"\\n      (ionInput)=\\\"getUser($event)\\\"\\n    >\\n    </ion-searchbar>\\n  </ion-row>\\n\\n  <!-- <div *ngIf=\\\"!emptydata\\\" style=\\\"margin-top: 20px\\\"> -->\\n  <div style=\\\"margin-top: 20px\\\">\\n    <div *ngIf=\\\"showList\\\">\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let users of search\\\" (click)=\\\"selectChat(users)\\\">\\n          <ion-text class=\\\"noti-head\\\">\\n            <b style=\\\"color: black\\\"> {{users.recieverName}} </b>\\n          </ion-text>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n    <!-- <div class=\\\"messagerie-section\\\"> -->\\n    <div *ngFor=\\\"let item of openchats\\\">\\n      <ion-row\\n        class=\\\"noti-row-withimg noti-single-row\\\"\\n        style=\\\"padding-left: 10px; border-bottom: 2px solid lightgrey\\\"\\n        *ngIf=\\\"item.blocked!=true\\\"\\n        (click)=\\\"gotochat(item)\\\"\\n      >\\n        <!-- <ion-avatar style=\\\"display: flex;\\n            align-items: flex-start;\\\"> -->\\n        <!-- <div class=\\\"noti-imgbox\\\"> -->\\n        <!-- <ion-img class=\\\"img\\\" style=\\\"height: 50px;\\n              width: 50px;\\\" [src]=\\\"item.recieverImage\\\"></ion-img> -->\\n        <ion-col\\n          style=\\\"display: flex; flex-direction: column; justify-content: center\\\"\\n          size=\\\"2\\\"\\n        >\\n          <ion-avatar\\n            class=\\\"noti-imgbox\\\"\\n            style=\\\"display: flex; align-items: center\\\"\\n          >\\n            <ion-img\\n              style=\\\"width: 50px; height: 50px\\\"\\n              [src]=\\\"item.recieverImage\\\"\\n            ></ion-img>\\n          </ion-avatar>\\n        </ion-col>\\n        <ion-col size=\\\"10\\\">\\n          <ion-row style=\\\"margin-top: 5px\\\">\\n            <ion-col>\\n              <div class=\\\"noti-head\\\">\\n                <b>{{item.recieverName | titlecase}}</b>\\n              </div>\\n            </ion-col>\\n            <!-- <ion-col style=\\\"display: flex; flex-direction: row-reverse\\\">\\n              <div class=\\\"noti-time\\\" *ngIf=\\\"item.showTime\\\">\\n                {{item.msgTime}}\\n              </div>\\n              <div class=\\\"noti-time\\\" *ngIf=\\\"!item.showTime\\\">\\n                {{item.msgDate}}\\n              </div>\\n            </ion-col> -->\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <div\\n                *ngIf=\\\"!item.msgRead\\\"\\n                style=\\\"\\n                  font-family: montserrat-medium;\\n                  font-weight: bold;\\n                  color: black;\\n                \\\"\\n                class=\\\"details-user\\\"\\n              >\\n                {{item.lastMsg}}\\n              </div>\\n              <div\\n                *ngIf=\\\"item.msgRead\\\"\\n                style=\\\"font-family: montserrat-medium; color: grey\\\"\\n                class=\\\"details-user\\\"\\n              >\\n                {{item.lastMsg}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n        <!-- </ion-avatar> -->\\n        <!-- </div> -->\\n\\n        <!-- <div *ngIf=\\\"item.lastMsg==''||item.lastMsg==null\\\"> -->\\n\\n        <!-- </div> -->\\n      </ion-row>\\n    </div>\\n    <ion-row\\n      class=\\\"noti-row-withimg noti-single-row\\\"\\n      style=\\\"padding-left: 10px; border-bottom: 2px solid lightgrey\\\"\\n      *ngFor=\\\"let group of eventGroups\\\"\\n      (click)=\\\"gotoGroupChat(group)\\\"\\n    >\\n      <!-- <ion-avatar style=\\\"display: flex;\\n            align-items: flex-start;\\\"> -->\\n      <!-- <div class=\\\"noti-imgbox\\\"> -->\\n      <!-- <ion-img class=\\\"img\\\" style=\\\"height: 50px;\\n              width: 50px;\\\" [src]=\\\"item.recieverImage\\\"></ion-img> -->\\n      <ion-col\\n        style=\\\"display: flex; flex-direction: column; justify-content: center\\\"\\n        size=\\\"2\\\"\\n      >\\n        <ion-avatar\\n          class=\\\"noti-imgbox\\\"\\n          style=\\\"display: flex; align-items: center\\\"\\n        >\\n          <ion-img\\n            style=\\\"width: 50px; height: 50px\\\"\\n            src=\\\"{{group.host_user_img}}\\\"\\n          ></ion-img>\\n        </ion-avatar>\\n      </ion-col>\\n      <ion-col size=\\\"10\\\">\\n        <ion-row style=\\\"margin-top: 5px\\\">\\n          <ion-col>\\n            <div class=\\\"noti-head\\\">\\n              <b\\n                >{{group.spcat_name||'Event ' | titlecase}} :\\n                {{group.event_date|date}}</b\\n              >\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <!-- *ngIf=\\\"!item.msgRead\\\" -->\\n            <!-- <div\\n              style=\\\"\\n                font-family: montserrat-medium;\\n                font-weight: bold;\\n                color: black;\\n              \\\"\\n              class=\\\"details-user\\\"\\n            >\\n              {{group.lastMsg}}\\n            </div> -->\\n            <!-- *ngIf=\\\"item.msgRead\\\" -->\\n            <div\\n              *ngIf=\\\"group.lastMsg\\\"\\n              style=\\\"font-family: montserrat-medium; color: grey\\\"\\n              class=\\\"details-user\\\"\\n            >\\n              {{group.lastMsg.slice(0,15)}} {{group.lastMsg.length>15?'...':''}}\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n      <!-- </ion-avatar> -->\\n      <!-- </div> -->\\n\\n      <!-- <div *ngIf=\\\"item.lastMsg==''||item.lastMsg==null\\\"> -->\\n\\n      <!-- </div> -->\\n    </ion-row>\\n\\n    <!-- </div> -->\\n  </div>\\n\\n  <div *ngIf=\\\"emptydata && !this.eventGroups.length\\\">\\n    <div\\n      *ngIf=\\\"emptydata\\\"\\n      style=\\\"\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: center;\\n        align-items: center;\\n        font-family: montserrat-medium;\\n      \\\"\\n      [translate]=\\\"'CHAT.Text2'\\\"\\n    >\\n      pas de discussions\\n    </div>\\n    <div *ngIf=\\\"emptyCoach\\\" style=\\\"padding: 10px\\\">\\n      <ion-row\\n        style=\\\"\\n          display: flex;\\n          flex-direction: row;\\n          justify-content: center;\\n          font-family: montserrat-medium;\\n          text-align: center;\\n        \\\"\\n        [translate]=\\\"'CHAT.Text3'\\\"\\n      >\\n      </ion-row>\\n      <ion-row\\n        style=\\\"display: flex; flex-direction: row; justify-content: center\\\"\\n      >\\n        <ion-button\\n          style=\\\"--border-radius: 52px; --background: #ffaa00\\\"\\n          (click)=\\\"gotosubscription()\\\"\\n          [translate]=\\\"'CHAT.Text4'\\\"\\n        >\\n        </ion-button>\\n      </ion-row>\\n    </div>\\n  </div>\\n</ion-content>\\n\\n<ion-footer class=\\\"footer-fixed-tab\\\" *ngIf=\\\"footerAction\\\">\\n  <ion-toolbar>\\n    <ion-buttons>\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"events()\\\">\\n        <img\\n          src=\\\"assets/images/unselectedlocation.png\\\"\\n          class=\\\"footer-img-location\\\"\\n        />\\n      </div>\\n\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"rankingDetails()\\\">\\n        <img src=\\\"assets/rankiconunselected.svg\\\" class=\\\"footer-img-location\\\" />\\n      </div>\\n\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"manage()\\\">\\n        <img\\n          src=\\\"assets/images/unselectedcalendar.png\\\"\\n          class=\\\"footer-img-date\\\"\\n        />\\n      </div>\\n      <div class=\\\"footer-btn-tabs\\\">\\n        <img src=\\\"assets/images/selectedmsg.png\\\" class=\\\"footer-img-chat\\\" />\\n        <!-- <div class=\\\"round\\\" *ngIf=\\\"this.api.showMessageDot\\\"></div> -->\\n        <div class=\\\"round\\\" *ngIf=\\\"this.api.showMessageDot\\\"></div>\\n      </div>\\n      <div class=\\\"footer-btn-tabs\\\" (click)=\\\"notifications()\\\">\\n        <img\\n          src=\\\"assets/images/unselectednotification.png\\\"\\n          class=\\\"footer-img-noti\\\"\\n        />\\n        <div class=\\\"round\\\" *ngIf=\\\"this.api.showNotificationDot\\\"></div>\\n        <!-- <div class=\\\"round\\\" *ngIf=\\\"this.api.showNotificationDot\\\">\\n          {{notificationArray}}\\n        </div> -->\\n      </div>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";"],"names":[],"sourceRoot":"webpack:///"}